% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
penrose --- TikZ library for producing Penrose tilings
E-mail: stacey@math.ntnu.no
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

This package is for the creation of Penrose tilings using either kite-and-dart or rhombuses, and either by manual placement or automatic generation.
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
----------------------------------------------------------------
penrose --- TikZ library for producint Penrose tilings
E-mail: stacey@math.ntnu.no
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

\endpreamble
\postamble

Copyright (C) 2014 by Andrew Stacey <stacey@math.ntnu.no>

This work may be distributed and/or modified under the
conditions of the LaTeX Project Public License (LPPL), either
version 1.3c of this license or (at your option) any later
version.  The latest version of this license is in the file:

http://www.latex-project.org/lppl.txt

This work is "maintained" (as per LPPL maintenance status) by
Andrew Stacey.

This work consists of the files  penrose.dtx
                                 penrose_doc.tex
and the derived files            penrose.ins,
                                 penrose.pdf,
                                 tikzlibrarypenrose.code.tex
                                 penrose_doc.pdf
                                 README.txt

\endpostamble
\usedir{tex/latex/penrose}
\generate{
  \file{tikzlibrarypenrose.code.tex}{\from{\jobname.dtx}{library}}
}
%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/penrose}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/penrose}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver>
\documentclass[full]{l3doc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{tikz}
\usepackage{trace}
\usetikzlibrary{penrose}
%\traceoff
%\usepackage[numbered]{hypdoc}
\definecolor{lstbgcolor}{rgb}{0.9,0.9,0.9} 
 
\usepackage{listings}
\lstloadlanguages{[LaTeX]TeX}
\lstset{breakatwhitespace=true,breaklines=true,language=TeX}
 
\usepackage{fancyvrb}

\newenvironment{example}
  {\VerbatimEnvironment
   \begin{VerbatimOut}[gobble=2]{example.out}}
  {\end{VerbatimOut}
   \begin{center}
%   \setlength{\parindent}{0pt}
   \fbox{\begin{minipage}{.9\linewidth}
     \lstset{breakatwhitespace=true,breaklines=true,language=TeX,basicstyle=\small}
     \lstinputlisting[]{example.out}
   \end{minipage}}

   \fbox{\begin{minipage}{.9\linewidth}
     \input{example.out}
   \end{minipage}}
\end{center}
}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{1.0}{2014/05/07}{Converted to DTX file}
%
% \DoNotIndex{\newcommand,\newenvironment}
%
% \providecommand*{\url}{\texttt}
% \title{The \textsf{spath3} package}
% \author{Andrew Stacey \\ \url{stacey@math.ntnu.no}}
% \date{1.0 from 2014/05/07}
%
%
% \maketitle
%
% 
% \section{Introduction}
%
% \StopEventually{}
%
% \section{Implementation}
%
% \iffalse
%<*library>
% \fi
% \subsection{Initialisation}
%
% \begin{macrocode}
\RequirePackage{spath3}

\pgfmathsetmacro\pr@chphi{cos(18)}
\pgfmathsetmacro\pr@shphi{sin(18)}
\pgfmathsetmacro\pr@cphi{cos(36)}
\pgfmathsetmacro\pr@sphi{sin(36)}
\pgfmathsetmacro\pr@invphi{2/(sqrt(5)+1)}
\pgfmathsetmacro\pr@invphisq{\pr@invphi*\pr@invphi}
\pgfmathsetmacro\pr@ominvphisq{\pr@invphi - \pr@invphisq}
\pgfmathsetmacro\pr@ominvphi{1 - \pr@invphi}

\ExplSyntaxOn

\MakeSPath{Penrose path a} {\pgfsyssoftpath@movetotoken{0pt}{0pt}\pgfsyssoftpath@linetotoken{1pt}{0pt}}
\SPathPrepare{Penrose path a}
\CloneSPath {Penrose path a}{Penrose path b}
\CloneSPath {Penrose path a}{Penrose path c}
\CloneSPath {Penrose path a}{Penrose path A}
\CloneSPath {Penrose path a}{Penrose path B}
\CloneSPath {Penrose path a}{Penrose path C}

\fp_new:N \l__penrose_tmpa_fp
\tl_new:N \l__penrose_tmpa_tl
\tl_new:N \l__penrose_tmpb_tl

\cs_new_nopar:Npn \penrose_normalise_path:n #1
{
  \spath_get:nnN {#1} {initial point} \l_tmpa_tl
  \fp_set:Nn \l_tmpa_fp {\tl_head:N \l_tmpa_tl}
  \tl_set:Nx \l_tmpa_tl {\tl_tail:N \l_tmpa_tl}
  \fp_set:Nn \l_tmpb_fp {\tl_head:N \l_tmpa_tl}
  \spath_get:nnN {#1} {final point} \l_tmpa_tl
  \fp_set:Nn \l_tmpa_fp {\tl_head:N \l_tmpa_tl - \l_tmpa_fp}
  \tl_set:Nx \l_tmpa_tl {\tl_tail:N \l_tmpa_tl}
  \fp_set:Nn \l_tmpb_fp {\tl_head:N \l_tmpa_tl - \l_tmpb_fp}
  \fp_set:Nn \l__penrose_tmpa_fp {\l_tmpa_fp^2 + \l_tmpb_fp^2}
  \fp_set:Nn \l_tmpa_fp {\l_tmpa_fp/\l__penrose_tmpa_fp}
  \fp_set:Nn \l_tmpb_fp {\l_tmpb_fp/\l__penrose_tmpa_fp}
  \fp_set:Nn \l__penrose_tmpa_fp {-\l_tmpb_fp}
  \tl_set:Nx \l_tmpb_tl { {\fp_use:N \l_tmpa_fp} {\fp_use:N \l_tmpb_fp} {\fp_use:N \l__penrose_tmpa_fp} {\fp_use:N \l_tmpa_fp}}
  \spath_get:nnN {#1} {initial point} \l_tmpa_tl
  \fp_set:Nn \l__penrose_tmpa_fp {(-1) * \l_tmpa_fp * \tl_head:N \l_tmpa_tl + (-1) * \l_tmpb_fp * \tl_tail:N \l_tmpa_tl}
  \fp_set:Nn \l_tmpb_fp {(-1) * \l_tmpa_fp * \tl_tail:N \l_tmpa_tl +  \l_tmpb_fp * \tl_head:N \l_tmpa_tl}
  \tl_put_right:Nx \l_tmpb_tl {{\fp_to_dim:N \l__penrose_tmpa_fp} {\fp_to_dim:N \l_tmpb_fp}}
  \spath_transform:nV {#1} \l_tmpb_tl
}

\NewDocumentCommand \SetPenrosePath { m }
{
  \pgfsyssoftpath@getcurrentpath\l_tmpa_tl
  \spath_clear_new:n {Penrose path #1}
  \spath_put:nnV {Penrose path #1} {path} \l_tmpa_tl
  \penrose_normalise_path:n {Penrose path #1}
}

\cs_new_nopar:Npn \tikz_scan_point:n #1
{
  \tikz@scan@one@point\pgfutil@firstofone#1\relax
}

\cs_generate_variant:Nn \tikz_scan_point:n {V}

\cs_new_nopar:Npn \penrose_make_tile:nnn #1#2#3
{
  \tl_set:Nn \l_tmpa_tl {#3}
  \tl_set:Nx \l_tmpb_tl {\tl_head:N \l_tmpa_tl}
  \tl_set:Nn \l_tmpa_tl {\pgfsyssoftpath@movetotoken}
  \tikz_scan_point:V \l_tmpb_tl
  \tl_put_right:Nx \l_tmpa_tl {{\dim_use:N \pgf@x}{\dim_use:N \pgf@y}}
  \spath_clear_new:n {Penrose path tile #1}
  \spath_put:nnV {Penrose path tile #1} {path} \l_tmpa_tl
  \tl_set:Nn \l__penrose_tmpa_tl {#3}
  \tl_put_right:Nx \l__penrose_tmpa_tl {{\tl_head:N \l__penrose_tmpa_tl}}
  \tl_map_inline:nn {#2} {
    \spath_clone:nn {Penrose path ##1} {Penrose path tmpa}
    \tl_set:Nx \l_tmpb_tl {\tl_head:N \l__penrose_tmpa_tl}
    \tl_set:Nx \l__penrose_tmpa_tl {\tl_tail:N \l__penrose_tmpa_tl}
    \tikz_scan_point:V \l_tmpb_tl
    \fp_set:Nn \l_tmpa_fp { \pgf@x }
    \fp_set:Nn \l_tmpb_fp { \pgf@y }
    \tl_set:Nx \l_tmpb_tl {\tl_head:N \l__penrose_tmpa_tl}
    \tikz_scan_point:V \l_tmpb_tl
    \fp_set:Nn \l_tmpa_fp {\pgf@x - \l_tmpa_fp}
    \fp_set:Nn \l_tmpb_fp {\pgf@y - \l_tmpb_fp}
    \fp_set:Nn \l__penrose_tmpa_fp {-\l_tmpb_fp}
    \tl_set:Nx \l_tmpb_tl {{\fp_use:N \l_tmpa_fp} {\fp_use:N \l__penrose_tmpa_fp} {\fp_use:N \l_tmpb_fp} {\fp_use:N \l_tmpa_fp} {0} {0}}
    \spath_transform:nV {Penrose path tmpa} \l_tmpb_tl
    \spath_weld:nn {Penrose path tile #1} {Penrose path tmpa}
  }
  \spath_close_path:n {Penrose path tile #1}
}

\cs_new_nopar:Npn \penrose_make_tile:nn #1#2
{
  \penrose_make_tile:nnn {#1} #2
}

\cs_generate_variant:Nn \penrose_make_tile:nn {nV}

\prop_new:N \g__penrose_tiles_prop

\fp_set:Nn \l_tmpa_fp {cosd(18)}
\fp_set:Nn \l_tmpb_fp {sind(18)}

\cs_new_nopar:Npn \tl_add_coordinate:Nnn #1#2#3 {
  \fp_set:Nn \l_tmpa_fp{#2}
  \fp_set:Nn \l_tmpb_fp{#3}
  \tl_put_right:Nx #1 {{(\fp_use:N \l_tmpa_fp, \fp_use:N \l_tmpb_fp)}}
}

\tl_clear:N \l_tmpa_tl
\tl_add_coordinate:Nnn \l_tmpa_tl {0}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(18)}{sind(18)}
\tl_add_coordinate:Nnn \l_tmpa_tl {2*cosd(18)}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(18)}{-sind(18)}

\prop_gput:Nnx \g__penrose_tiles_prop {thin~ rhombus}  {{a A B b} {\tl_use:N \l_tmpa_tl}}

\tl_clear:N \l_tmpa_tl
\tl_add_coordinate:Nnn \l_tmpa_tl {0}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(36)}{sind(36)}
\tl_add_coordinate:Nnn \l_tmpa_tl {2*cosd(36)}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(36)}{-sind(36)}

\prop_gput:Nnx \g__penrose_tiles_prop {thick~ rhombus}  {{B a A b} {\tl_use:N \l_tmpa_tl}}

\tl_clear:N \l_tmpa_tl
\tl_add_coordinate:Nnn \l_tmpa_tl {0}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {2*sind(18)*cosd(108)}{2*sind(18)*sind(108)}
\tl_add_coordinate:Nnn \l_tmpa_tl {2*sind(18)}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {2*sind(18)*cosd(108)}{-2*sind(18)*sind(108)}

\prop_gput:Nnx \g__penrose_tiles_prop {dart}  {{c a A C} {\tl_use:N \l_tmpa_tl}}

\tl_clear:N \l_tmpa_tl
\tl_add_coordinate:Nnn \l_tmpa_tl {0}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(36)}{sind(36)}
\tl_add_coordinate:Nnn \l_tmpa_tl {1}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(36)}{-sind(36)}

\prop_gput:Nnx \g__penrose_tiles_prop {kite}  {{a c C A} {\tl_use:N \l_tmpa_tl}}

\tl_clear:N \l_tmpa_tl
\tl_add_coordinate:Nnn \l_tmpa_tl {0}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(18)}{sind(18)}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(18)}{-sind(18)}

\prop_gput:Nnx \g__penrose_tiles_prop {golden~ triangle}  {{a c b} {\tl_use:N \l_tmpa_tl}}

\tl_clear:N \l_tmpa_tl
\tl_add_coordinate:Nnn \l_tmpa_tl {0}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(18)}{sind(18)}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(18)}{-sind(18)}

\prop_gput:Nnx \g__penrose_tiles_prop {reverse~ golden~ triangle}  {{B C A} {\tl_use:N \l_tmpa_tl}}

\tl_clear:N \l_tmpa_tl
\tl_add_coordinate:Nnn \l_tmpa_tl {0}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(36)}{sind(36)}
\tl_add_coordinate:Nnn \l_tmpa_tl {2*cosd(36)}{0}

\prop_gput:Nnx \g__penrose_tiles_prop {golden~ gnomon}  {{C b A} {\tl_use:N \l_tmpa_tl}}

\tl_clear:N \l_tmpa_tl
\tl_add_coordinate:Nnn \l_tmpa_tl {0}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {2*cosd(36)}{0}
\tl_add_coordinate:Nnn \l_tmpa_tl {cosd(36)}{-sind(36)}
\prop_gput:Nnx \g__penrose_tiles_prop {reverse~ golden~ gnomon}  {{a B c} {\tl_use:N \l_tmpa_tl}}


\NewDocumentCommand \MakePenroseTile {m}
{
  \prop_get:NnN \g__penrose_tiles_prop {#1} \l_tmpa_tl
  \penrose_make_tile:nV {#1} \l_tmpa_tl
}

\NewDocumentCommand \UsePenroseTile {O{} m} 
{
  \spath_clone:nn {Penrose path tile #2} {Penrose path tmpa}
  \pgfgettransform \l_tmpa_tl
  \tl_clear:N \l_tmpb_tl
  \tl_set:Nx \l_tmpb_tl {{\tl_head:N \l_tmpa_tl}}
  \tl_set:Nx \l_tmpa_tl {\tl_tail:N \l_tmpa_tl}
  \tl_put_right:Nx \l_tmpb_tl {{\tl_item:Nn \l_tmpa_tl {2}}}
  \tl_put_right:Nx \l_tmpb_tl {{\tl_item:Nn \l_tmpa_tl {1}}}
  \tl_set:Nx \l_tmpa_tl {\tl_tail:N \l_tmpa_tl}
  \tl_set:Nx \l_tmpa_tl {\tl_tail:N \l_tmpa_tl}
  \tl_put_right:NV \l_tmpb_tl \l_tmpa_tl
  \spath_transform:nV {Penrose path tmpa} \l_tmpb_tl
  \spath_protocol_path:n {Penrose path tmpa}
  \spath_tikz_path:nn {#1}{Penrose path tmpa}
}

\tikzset{
  save~ Penrose~ path/.code={
    \tikz@addmode{
      \pgfsyssoftpath@getcurrentpath\l_tmpa_tl
      \spath_clear_new:n {Penrose path #1}
      \spath_put:nnV {Penrose path #1} {path} \l_tmpa_tl
      \penrose_normalise_path:n {Penrose path #1}
      \tl_to_uppercase:n {\tl_set:Nx \l__penrose_tmpa_tl {#1}}
      \spath_clone:nn {Penrose path #1} {Penrose path \tl_use:N \l__penrose_tmpa_tl }
      \spath_reverse:n {Penrose path \tl_use:N \l__penrose_tmpa_tl}
      \spath_transform:nnnnnnn {Penrose path \tl_use:N \l__penrose_tmpa_tl} {-1} {0} {0} {-1} {1} {0}
    }
  }
}

\MakePenroseTile {thin~ rhombus}
\MakePenroseTile {thick~ rhombus} 
\MakePenroseTile {dart}
\MakePenroseTile {kite}
\MakePenroseTile {golden~ triangle}
\MakePenroseTile {reverse~ golden~ triangle}
\MakePenroseTile {golden~ gnomon}
\MakePenroseTile {reverse~ golden~ gnomon}

% Now let's try emulating the Lindenmayer system

\prop_new:N \g__penrose_rhombus_lms_rule_prop
\prop_put:Nnn \g__penrose_rhombus_lms_rule_prop {T} {[f*sT][f>g]}
\prop_put:Nnn \g__penrose_rhombus_lms_rule_prop {t} {[f_st][f>G]}
\prop_put:Nnn \g__penrose_rhombus_lms_rule_prop {G} {[f+sG][sf>g][sf*sT]}
\prop_put:Nnn \g__penrose_rhombus_lms_rule_prop {g} {[f-sg][sf>G][sf_st]}

\prop_new:N \g__penrose_kite_lms_rule_prop
\prop_put:Nnn \g__penrose_kite_lms_rule_prop {T} {[f*sT][f>st][+sg]}
\prop_put:Nnn \g__penrose_kite_lms_rule_prop {t} {[f_st][f>sT][-sG]}
\prop_put:Nnn \g__penrose_kite_lms_rule_prop {G} {[f*+sG][sT]}
\prop_put:Nnn \g__penrose_kite_lms_rule_prop {g} {[f-_sg][st]}

\prop_set_eq:NN \g__penrose_rtriangle_lms_rule_prop \g__penrose_rhombus_lms_rule_prop
\prop_set_eq:NN \g__penrose_ktriangle_lms_rule_prop \g__penrose_kite_lms_rule_prop

\prop_new:N \g__penrose_default_lms_action_prop
\prop_new:N \g__penrose_rhombus_lms_action_prop
\prop_new:N \g__penrose_kite_lms_action_prop
\prop_new:N \g__penrose_rtriangle_lms_action_prop
\prop_new:N \g__penrose_ktriangle_lms_action_prop

\dim_new:N \l__penrose_step_dim
\fp_new:N \l__penrose_scale_fp
\dim_set:Nn \l__penrose_step_dim {1cm}
\fp_set:Nn \l__penrose_scale_fp {1}

\prop_put:Nnn \g__penrose_default_lms_action_prop {[} {\group_begin:}
\prop_put:Nnn \g__penrose_default_lms_action_prop {]} {\group_end:}
\prop_put:Nnn \g__penrose_default_lms_action_prop {f} {\pgftransformxshift{\l__penrose_step_dim}}
\prop_put:Nnn \g__penrose_default_lms_action_prop {s} {\pgftransformscale{\fp_use:N \l__penrose_scale_fp}}

\prop_put:Nnn \g__penrose_rhombus_lms_action_prop {+} {\pgftransformrotate{144}}
\prop_put:Nnn \g__penrose_rhombus_lms_action_prop {*} {\pgftransformrotate{108}}
\prop_put:Nnn \g__penrose_rhombus_lms_action_prop {-} {\pgftransformrotate{216}}
\prop_put:Nnn \g__penrose_rhombus_lms_action_prop {_} {\pgftransformrotate{252}}
\prop_put:Nnn \g__penrose_rhombus_lms_action_prop {>} {\pgftransformrotate{180}}

\prop_put:Nnn \g__penrose_rhombus_lms_action_prop {s} {
  \fp_set:Nn \l_tmpa_fp { 2 * sind(18) * \l__penrose_step_dim }
  \dim_set:Nn \l__penrose_step_dim {\fp_to_dim:N \l_tmpa_fp}
}

\prop_set_eq:NN \g__penrose_rtriangle_lms_action_prop  \g__penrose_rhombus_lms_action_prop

\prop_put:Nnn \g__penrose_rhombus_lms_action_prop {T} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{198}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim*2*cosd(18)}
  \pgftransformxshift{-\fp_to_dim:N \l_tmpa_fp}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ thin~ rhombus/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{thin~rhombus}
  \group_end:
}
\prop_put:Nnn \g__penrose_rhombus_lms_action_prop {G} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm/(2*cosd(36))}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ thick~ rhombus/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{thick~rhombus}
  \group_end:
}

\prop_put:Nnn \g__penrose_kite_lms_action_prop {+} {\pgftransformrotate{36}}
\prop_put:Nnn \g__penrose_kite_lms_action_prop {*} {\pgftransformrotate{108}}
\prop_put:Nnn \g__penrose_kite_lms_action_prop {-} {\pgftransformrotate{-36}}
\prop_put:Nnn \g__penrose_kite_lms_action_prop {_} {\pgftransformrotate{-108}}
\prop_put:Nnn \g__penrose_kite_lms_action_prop {>} {\pgftransformrotate{180}}

\prop_put:Nnn \g__penrose_kite_lms_action_prop {s} {
  \fp_set:Nn \l_tmpa_fp { 2 * sind(18) * \l__penrose_step_dim }
  \dim_set:Nn \l__penrose_step_dim {\fp_to_dim:N \l_tmpa_fp}
}

\prop_set_eq:NN \g__penrose_ktriangle_lms_action_prop  \g__penrose_kite_lms_action_prop


\prop_put:Nnn \g__penrose_kite_lms_action_prop {T} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{36}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ kite/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{kite}
  \group_end:
}

\prop_put:Nnn \g__penrose_kite_lms_action_prop {g} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{144}
  \pgftransformxshift{-\l__penrose_step_dim * 2 * sin(18)}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ dart/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{dart}
  \group_end:
}

\prop_put:Nnn \g__penrose_rtriangle_lms_action_prop {T} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{18}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ reverse~ golden~ triangle/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{reverse~ golden~ triangle}
  \group_end:
}

\prop_put:Nnn \g__penrose_rtriangle_lms_action_prop {t} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{-18}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ golden~ triangle/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{golden~ triangle}
  \group_end:
}

\prop_put:Nnn \g__penrose_rtriangle_lms_action_prop {G} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{180}
  \pgftransformxshift{-\l__penrose_step_dim}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm/(2*cosd(36))}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ reverse~ golden~ gnomon/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{reverse~ golden~ gnomon}
  \group_end:
}

\prop_put:Nnn \g__penrose_rtriangle_lms_action_prop {g} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{180}
  \pgftransformxshift{-\l__penrose_step_dim}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm/(2*cosd(36))}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ golden~ gnomon/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{golden~ gnomon}
  \group_end:
}

\prop_put:Nnn \g__penrose_ktriangle_lms_action_prop {T} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{18}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ reverse~ golden~ triangle/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{reverse~ golden~ triangle}
  \group_end:
}

\prop_put:Nnn \g__penrose_ktriangle_lms_action_prop {t} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{-18}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ golden~ triangle/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{golden~ triangle}
  \group_end:
}

\prop_put:Nnn \g__penrose_ktriangle_lms_action_prop {G} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{180}
  \pgftransformxshift{-\l__penrose_step_dim}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm/(2*cosd(36))}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ reverse~ golden~ gnomon/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{reverse~ golden~ gnomon}
  \group_end:
}

\prop_put:Nnn \g__penrose_ktriangle_lms_action_prop {g} {
  \group_begin:
  \int_gincr:N \l__penrose_tile_int
  \pgftransformrotate{180}
  \pgftransformxshift{-\l__penrose_step_dim}
  \fp_set:Nn \l_tmpa_fp {\l__penrose_step_dim/1cm/(2*cosd(36))}
  \pgftransformscale{\fp_use:N \l_tmpa_fp}
  \UsePenroseTile[every~ Penrose~ tile/.try, every~ golden~ gnomon/.try, Penrose~ tile~ \int_use:N \l__penrose_tile_int/.try, Penrose~ tile/.try/.expand~ once=\int_use:N \l__penrose_tile_int ]{golden~ gnomon}
  \group_end:
}

% #1 -> tl to store result in
% #2 -> name
% #3 -> number of iterations
% #4 -> initial state
\cs_new_nopar:Npn \penrose_make_lms:Nnnn #1#2#3#4
{
  \group_begin:
  \tl_set:Nn \l__penrose_tmpb_tl {#4}
  \prg_replicate:nn {#3} {
    \tl_set_eq:NN \l__penrose_tmpa_tl \l__penrose_tmpb_tl
    \tl_clear:N \l__penrose_tmpb_tl
    \tl_map_inline:Nn \l__penrose_tmpa_tl
    {
      \prop_if_in:cnTF {g__penrose_#2_lms_rule_prop} {##1}
      {
        \tl_put_right:Nx \l__penrose_tmpb_tl {\prop_get:cn {g__penrose_#2_lms_rule_prop} {##1} }
      }
      {
        \tl_put_right:Nn \l__penrose_tmpb_tl {##1}
      }
    }
  }
  \tl_set:Nn \l_tmpa_tl {
    \group_end:
    \tl_set:Nn #1
  }
  \tl_put_right:Nx \l_tmpa_tl {{\tl_use:N \l__penrose_tmpb_tl}}
  \tl_use:N \l_tmpa_tl
}

\cs_generate_variant:Nn \penrose_make_lms:Nnnn {Nnnx}

% #1 -> token list with result
% #2 -> name 
\cs_new_nopar:Npn \penrose_invoke_lms:Nn #1#2
{
  \group_begin:
  \tl_map_inline:Nn #1 {
    \prop_if_in:cnTF {g__penrose_#2_lms_action_prop} {##1}
    {
      \prop_get:cn {g__penrose_#2_lms_action_prop} {##1}
    }
    {
      \prop_if_in:cnT {g__penrose_default_lms_action_prop} {##1}
      {
        \prop_get:cn {g__penrose_default_lms_action_prop} {##1}
      }
    }
  }
  \group_end:
}

\int_new:N \l__penrose_tile_int

\NewDocumentCommand \PenroseDecomposition { O{} m m m }
{
  \group_begin:
  \int_gzero:N \l__penrose_tile_int
  \tikzset{#1}
  \penrose_make_lms:Nnnx \l_tmpa_tl {#2} {#3} {#4}
  \penrose_invoke_lms:Nn \l_tmpa_tl {#2}
  \group_end:
}

\def\PenroseNumberOfTiles
{
  \int_use:N \l__penrose_tile_int
}

\tikzset{
  Penrose~ step/.code={
    \dim_set:Nn \l__penrose_step_dim {#1}
  },
  Penrose~ scale/.code={
    \fp_set:Nn \l__penrose_scale_fp {#1}
  }
}

\ExplSyntaxOff

\tikzset{
  thin rhombus/.pic={
    \begin{scope}
    \pgfkeysgetvalue{/tikz/Penrose/alignment location}{\prloc}
    \ifx\prloc\pgfutil@empty
    \else
    \begingroup
    \tikzset{name prefix ..}%
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} start)%
    \global\pgf@xa=\pgf@x
    \global\pgf@ya=\pgf@y
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} end)%
    \global\pgf@xb=\pgf@x
    \global\pgf@yb=\pgf@y
    \endgroup
    \advance\pgf@xb by -\pgf@xa
    \advance\pgf@yb by -\pgf@ya
    \pgftransformshift{\pgfpoint{\pgf@xa}{\pgf@ya}}%
    \pgfpointnormalised{\pgfpoint{\pgf@xb}{\pgf@yb}}
    \pgf@xb=\pgf@x
    \pgf@yb=\pgf@y
\pgftransformtriangle{\pgfpoint{0pt}{0pt}}{\pgfpoint{\pgf@xb}{\pgf@yb}}{\pgfpoint{-\pgf@yb}{\pgf@xb}}
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}b\relax
    \pgftransformrotate{-18}%
    \pgftransformshift{\pgfpoint{-\pr@chphi cm}{\pr@shphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}B\relax
    \pgftransformrotate{18}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}a\relax
    \pgftransformrotate{198}%
    \pgftransformshift{\pgfpoint{-2*\pr@chphi cm}{0 cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}A\relax
    \pgftransformrotate{162}%
    \pgftransformshift{\pgfpoint{-\pr@chphi cm}{-\pr@shphi cm}}%
    \fi\fi\fi\fi
    \fi
    \UsePenroseTile[clip]{thin rhombus}
    \UsePenroseTile[every Penrose tile/.try, every thin rhombus/.try, pic actions]{thin rhombus}
\path[every circle arc/.try] (18:1) circle[radius=1/4];
\path[every long arc/.try] (-18:1) circle[radius=1/4];
\coordinate (-edge a start) at (0,0);
\coordinate (-edge a end) at (18:1);
\coordinate (-edge A start) at (18:1);
\coordinate (-edge A end) at (2*\pr@chphi,0);
\coordinate (-edge B start) at (2*\pr@chphi,0);
\coordinate (-edge B end) at (-18:1);
\coordinate (-edge b start) at (-18:1);
\coordinate (-edge b end) at (0,0);
    \end{scope}
  },
  thin rhombus/.style={
    every Penrose pic/.try,
    pic type=thin rhombus,
  },
  thick rhombus/.pic={
    \begin{scope}
    \pgfkeysgetvalue{/tikz/Penrose/alignment location}{\prloc}
    \ifx\prloc\pgfutil@empty
    \else
    \begingroup
    \tikzset{name prefix ..}%
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} start)%
    \global\pgf@xa=\pgf@x
    \global\pgf@ya=\pgf@y
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} end)%
    \global\pgf@xb=\pgf@x
    \global\pgf@yb=\pgf@y
    \endgroup
    \advance\pgf@xb by -\pgf@xa
    \advance\pgf@yb by -\pgf@ya
    \pgftransformshift{\pgfpoint{\pgf@xa}{\pgf@ya}}%
    \pgfpointnormalised{\pgfpoint{\pgf@xb}{\pgf@yb}}
    \pgf@xb=\pgf@x
    \pgf@yb=\pgf@y
\pgftransformtriangle{\pgfpoint{0pt}{0pt}}{\pgfpoint{\pgf@xb}{\pgf@yb}}{\pgfpoint{-\pgf@yb}{\pgf@xb}}
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}b\relax
    \pgftransformrotate{144}%
    \pgftransformshift{\pgfpoint{-\pr@cphi cm}{-\pr@sphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}B\relax
    \pgftransformrotate{36}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}a\relax
    \pgftransformrotate{-36}%
    \pgftransformshift{\pgfpoint{-\pr@cphi cm}{\pr@sphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}A\relax
    \pgftransformrotate{216}%
    \pgftransformshift{\pgfpoint{-2*\pr@cphi cm}{0 cm}}%
    \fi\fi\fi\fi
    \fi
    \UsePenroseTile[clip]{thick rhombus}
    \UsePenroseTile[every Penrose tile/.try, every thick rhombus/.try, pic actions]{thick rhombus}
\path[every circle arc/.try] (2*\pr@cphi,0) circle[radius=1/4];
\path[every long arc/.try] (0,0) circle[radius=3/4];
\coordinate (-edge B start) at (0,0);
\coordinate (-edge B end) at (36:1);
\coordinate (-edge a start) at (36:1);
\coordinate (-edge a end) at (2*\pr@cphi,0);
\coordinate (-edge A start) at (2*\pr@cphi,0);
\coordinate (-edge A end) at (-36:1);
\coordinate (-edge b start) at (-36:1);
\coordinate (-edge b end) at (0,0);
    \end{scope}
  },
  thick rhombus/.style={
    every Penrose pic/.try,
    pic type=thick rhombus,
  },
  align with/.code args={#1 along #2}{%
    \tikzset{
      Penrose/alignment location=#1,
      Penrose/alignment edge=#2,
    }%
  },
  Penrose/alignment location/.initial={},
  Penrose/alignment edge/.initial=a,
  kite/.pic={
    \begin{scope}
    \pgfkeysgetvalue{/tikz/Penrose/alignment location}{\prloc}
    \ifx\prloc\pgfutil@empty
    \else
    \begingroup
    \tikzset{name prefix ..}%
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} start)%
    \global\pgf@xa=\pgf@x
    \global\pgf@ya=\pgf@y
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} end)%
    \global\pgf@xb=\pgf@x
    \global\pgf@yb=\pgf@y
    \endgroup
    \advance\pgf@xb by -\pgf@xa
    \advance\pgf@yb by -\pgf@ya
    \pgftransformshift{\pgfpoint{\pgf@xa}{\pgf@ya}}%
    \pgfpointnormalised{\pgfpoint{\pgf@xb}{\pgf@yb}}
    \pgf@xb=\pgf@x
    \pgf@yb=\pgf@y
\pgftransformtriangle{\pgfpoint{0pt}{0pt}}{\pgfpoint{\pgf@xb}{\pgf@yb}}{\pgfpoint{-\pgf@yb}{\pgf@xb}}
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}c\relax
    \pgftransformrotate{-72}%
    \pgftransformshift{\pgfpoint{-\pr@cphi cm}{\pr@sphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}C\relax
    \pgftransformrotate{-108}%
    \pgftransformshift{\pgfpoint{-1 cm}{0 cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}a\relax
    \pgftransformrotate{36}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}A\relax
    \pgftransformrotate{144}%
    \pgftransformshift{\pgfpoint{-\pr@cphi cm}{-\pr@sphi cm}}%
    \fi\fi\fi\fi
    \fi
    \UsePenroseTile[clip]{kite}
    \UsePenroseTile[every Penrose tile/.try, every kite/.try, pic actions]{kite}
\path[every circle arc/.try] (0,0) circle[radius=\pr@invphi];
\path[every long arc/.try] (1,0) circle[radius=\pr@invphisq];
\coordinate (-edge a start) at (0,0);
\coordinate (-edge a end) at (36:1);
\coordinate (-edge c start) at (36:1);
\coordinate (-edge c end) at (1,0);
\coordinate (-edge C start) at (1,0);
\coordinate (-edge C end) at (-36:1);
\coordinate (-edge A start) at (-36:1);
\coordinate (-edge A end) at (0,0);
    \end{scope}
  },
  dart/.pic={
    \begin{scope}
    \pgfkeysgetvalue{/tikz/Penrose/alignment location}{\prloc}
    \ifx\prloc\pgfutil@empty
    \else
    \begingroup
    \tikzset{name prefix ..}%
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} start)%
    \global\pgf@xa=\pgf@x
    \global\pgf@ya=\pgf@y
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} end)%
    \global\pgf@xb=\pgf@x
    \global\pgf@yb=\pgf@y
    \endgroup
    \advance\pgf@xb by -\pgf@xa
    \advance\pgf@yb by -\pgf@ya
    \pgftransformshift{\pgfpoint{\pgf@xa}{\pgf@ya}}%
    \pgfpointnormalised{\pgfpoint{\pgf@xb}{\pgf@yb}}
    \pgf@xb=\pgf@x
    \pgf@yb=\pgf@y
\pgftransformtriangle{\pgfpoint{0pt}{0pt}}{\pgfpoint{\pgf@xb}{\pgf@yb}}{\pgfpoint{-\pgf@yb}{\pgf@xb}}
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}c\relax
    \pgftransformrotate{108}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}C\relax
    \pgftransformrotate{72}%
    \pgftransformshift{\pgfpoint{\pr@invphi*\pr@shphi cm}{-\pr@invphi*\pr@chphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}a\relax
    \pgftransformrotate{-36}%
    \pgftransformshift{\pgfpoint{\pr@invphi*\pr@shphi cm}{\pr@invphi*\pr@chphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}A\relax
    \pgftransformrotate{216}%
    \pgftransformshift{\pgfpoint{-\pr@invphi cm}{0 cm}}%
    \fi\fi\fi\fi
    \fi
    \UsePenroseTile[clip]{dart}
    \UsePenroseTile[every Penrose tile/.try, every dart/.try, pic actions]{dart}
\path[every circle arc/.try] (\pr@invphi,0) circle[radius=\pr@ominvphi];
\path[every long arc/.try] (0,0) circle[radius=\pr@ominvphisq];
\coordinate (-edge c start) at (0,0);
\coordinate (-edge c end) at (108:\pr@invphi);
\coordinate (-edge a start) at (108:\pr@invphi);
\coordinate (-edge a end) at (\pr@invphi,0);
\coordinate (-edge A start) at (\pr@invphi,0);
\coordinate (-edge A end) at (-108:\pr@invphi);
\coordinate (-edge C start) at (-108:\pr@invphi);
\coordinate (-edge C end) at (0,0);
    \end{scope}
  },
  kite/.style={
    every Penrose pic/.try,
    pic type=kite,
  },
  dart/.style={
    every Penrose pic/.try,
    pic type=dart,
  },
  golden triangle/.pic={
    \begin{scope}
    \pgfkeysgetvalue{/tikz/Penrose/alignment location}{\prloc}
    \ifx\prloc\pgfutil@empty
    \else
    \begingroup
    \tikzset{name prefix ..}%
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} start)%
    \global\pgf@xa=\pgf@x
    \global\pgf@ya=\pgf@y
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} end)%
    \global\pgf@xb=\pgf@x
    \global\pgf@yb=\pgf@y
    \endgroup
    \advance\pgf@xb by -\pgf@xa
    \advance\pgf@yb by -\pgf@ya
    \pgftransformshift{\pgfpoint{\pgf@xa}{\pgf@ya}}%
    \pgfpointnormalised{\pgfpoint{\pgf@xb}{\pgf@yb}}
    \pgf@xb=\pgf@x
    \pgf@yb=\pgf@y
\pgftransformtriangle{\pgfpoint{0pt}{0pt}}{\pgfpoint{\pgf@xb}{\pgf@yb}}{\pgfpoint{-\pgf@yb}{\pgf@xb}}
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}B\relax
    \pgftransformrotate{18}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}C\relax
    \pgftransformrotate{-90}%
    \pgftransformshift{\pgfpoint{-\pr@chphi cm}{\pr@shphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}A\relax
    \pgftransformrotate{162}%
    \pgftransformshift{\pgfpoint{-\pr@chphi cm}{-\pr@shphi cm}}%
    \fi\fi\fi
    \fi
    \UsePenroseTile[clip]{golden triangle}
    \UsePenroseTile[every Penrose tile/.try, every golden triangle/.try, pic actions]{golden triangle}
%\path[every circle arc/.try] (18:1) circle[radius=1/4];
%\path[every long arc/.try] (-18:1) circle[radius=1/4];
\coordinate (-edge a start) at (0,0);
\coordinate (-edge a end) at (18:1);
\coordinate (-edge c start) at (18:1);
\coordinate (-edge c end) at (-18:1);
\coordinate (-edge b start) at (-18:1);
\coordinate (-edge b end) at (0,0);
    \end{scope}
  },
  golden triangle/.style={
    every Penrose pic/.try,
    pic type=golden triangle,
  },
  reverse golden triangle/.pic={
    \begin{scope}
    \pgfkeysgetvalue{/tikz/Penrose/alignment location}{\prloc}
    \ifx\prloc\pgfutil@empty
    \else
    \begingroup
    \tikzset{name prefix ..}%
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} start)%
    \global\pgf@xa=\pgf@x
    \global\pgf@ya=\pgf@y
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} end)%
    \global\pgf@xb=\pgf@x
    \global\pgf@yb=\pgf@y
    \endgroup
    \advance\pgf@xb by -\pgf@xa
    \advance\pgf@yb by -\pgf@ya
    \pgftransformshift{\pgfpoint{\pgf@xa}{\pgf@ya}}%
    \pgfpointnormalised{\pgfpoint{\pgf@xb}{\pgf@yb}}
    \pgf@xb=\pgf@x
    \pgf@yb=\pgf@y
\pgftransformtriangle{\pgfpoint{0pt}{0pt}}{\pgfpoint{\pgf@xb}{\pgf@yb}}{\pgfpoint{-\pgf@yb}{\pgf@xb}}
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}b\relax
    \pgftransformrotate{162}%
    \pgftransformshift{\pgfpoint{-\pr@chphi cm}{-\pr@shphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}c\relax
    \pgftransformrotate{-90}%
    \pgftransformshift{\pgfpoint{-\pr@chphi cm}{\pr@shphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}a\relax
    \pgftransformrotate{18}%
    \fi\fi\fi
    \fi
    \UsePenroseTile[clip]{reverse golden triangle}
    \UsePenroseTile[every Penrose tile/.try, every reverse golden triangle/.try, pic actions]{reverse golden triangle}
%\path[every circle arc/.try] (18:1) circle[radius=1/4];
%\path[every long arc/.try] (-18:1) circle[radius=1/4];
\coordinate (-edge B start) at (0,0);
\coordinate (-edge B end) at (18:1);
\coordinate (-edge C start) at (18:1);
\coordinate (-edge C end) at (-18:1);
\coordinate (-edge A start) at (-18:1);
\coordinate (-edge A end) at (0,0);
    \end{scope}
  },
  reverse golden triangle/.style={
    every Penrose pic/.try,
    pic type=reverse golden triangle,
  },
  golden gnomon/.pic={
    \begin{scope}
    \pgfkeysgetvalue{/tikz/Penrose/alignment location}{\prloc}
    \ifx\prloc\pgfutil@empty
    \else
    \begingroup
    \tikzset{name prefix ..}%
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} start)%
    \global\pgf@xa=\pgf@x
    \global\pgf@ya=\pgf@y
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} end)%
    \global\pgf@xb=\pgf@x
    \global\pgf@yb=\pgf@y
    \endgroup
    \advance\pgf@xb by -\pgf@xa
    \advance\pgf@yb by -\pgf@ya
    \pgftransformshift{\pgfpoint{\pgf@xa}{\pgf@ya}}%
    \pgfpointnormalised{\pgfpoint{\pgf@xb}{\pgf@yb}}
    \pgf@xb=\pgf@x
    \pgf@yb=\pgf@y
\pgftransformtriangle{\pgfpoint{0pt}{0pt}}{\pgfpoint{\pgf@xb}{\pgf@yb}}{\pgfpoint{-\pgf@yb}{\pgf@xb}}
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}c\relax
    \pgftransformrotate{144}%
    \pgftransformshift{\pgfpoint{-\pr@cphi cm}{-\pr@sphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}B\relax
    \pgftransformrotate{-144}%
    \pgftransformshift{\pgfpoint{-2*\pr@cphi cm}{0 cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}a\relax
    \fi\fi\fi
    \fi
    \UsePenroseTile[clip]{golden gnomon}
    \UsePenroseTile[every Penrose tile/.try, every golden gnomon/.try, pic actions]{golden gnomon}
%\path[every circle arc/.try] (18:1) circle[radius=1/4];
%\path[every long arc/.try] (-18:1) circle[radius=1/4];
\coordinate (-edge C start) at (0,0);
\coordinate (-edge C end) at (36:1);
\coordinate (-edge b start) at (36:1);
\coordinate (-edge b end) at (2*\pr@cphi,0);
\coordinate (-edge A start) at (2*\pr@cphi,0);
\coordinate (-edge A end) at (0,0);
    \end{scope}
  },
  golden gnomon/.style={
    every Penrose pic/.try,
    pic type=golden gnomon,
  },
  reverse golden gnomon/.pic={
    \begin{scope}
    \pgfkeysgetvalue{/tikz/Penrose/alignment location}{\prloc}
    \ifx\prloc\pgfutil@empty
    \else
    \begingroup
    \tikzset{name prefix ..}%
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} start)%
    \global\pgf@xa=\pgf@x
    \global\pgf@ya=\pgf@y
    \tikz@scan@one@point\pgfutil@firstofone(\prloc-edge \pgfkeysvalueof{/tikz/Penrose/alignment edge} end)%
    \global\pgf@xb=\pgf@x
    \global\pgf@yb=\pgf@y
    \endgroup
    \advance\pgf@xb by -\pgf@xa
    \advance\pgf@yb by -\pgf@ya
    \pgftransformshift{\pgfpoint{\pgf@xa}{\pgf@ya}}%
    \pgfpointnormalised{\pgfpoint{\pgf@xb}{\pgf@yb}}
    \pgf@xb=\pgf@x
    \pgf@yb=\pgf@y
\pgftransformtriangle{\pgfpoint{0pt}{0pt}}{\pgfpoint{\pgf@xb}{\pgf@yb}}{\pgfpoint{-\pgf@yb}{\pgf@xb}}
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}C\relax
    \pgftransformrotate{36}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}b\relax
    \pgftransformrotate{-36}%
    \pgftransformshift{\pgfpoint{-\pr@cphi cm}{\pr@sphi cm}}%
    \else
    \if\pgfkeysvalueof{/tikz/Penrose/alignment edge}A\relax
    \pgftransformrotate{180}%
    \pgftransformshift{\pgfpoint{-2*\pr@cphi cm}{0 cm}}%
    \fi\fi\fi
    \fi
    \UsePenroseTile[clip]{reverse golden gnomon}
    \UsePenroseTile[every Penrose tile/.try, every reverse golden gnomon/.try, pic actions]{reverse golden gnomon}
%\path[every circle arc/.try] (18:1) circle[radius=1/4];
%\path[every long arc/.try] (-18:1) circle[radius=1/4];
\coordinate (-edge a start) at (0,0);
\coordinate (-edge a end) at (2*\pr@cphi,0);
\coordinate (-edge B start) at (2*\pr@cphi,0);
\coordinate (-edge B end) at (-36:1);
\coordinate (-edge c start) at (-36:1);
\coordinate (-edge c end) at (0,0);
    \end{scope}
  },
  reverse golden gnomon/.style={
    every Penrose pic/.try,
    pic type=reverse golden gnomon,
  },
}
% \end{macrocode}
%
% \iffalse
%</library>
% \fi
%\Finale
\endinput
